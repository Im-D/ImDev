{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["withLayout","data","location","posts","edges","totalCount","pathname","pageCount","Math","ceil","className","PostList","Link"],"mappings":"6FAAA,uEAsCeA,uBAjBE,SAAC,GAAgC,IAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAyB,EACbD,EAAKE,MAA1BA,EADkC,EACzCC,MAAcC,EAD2B,EAC3BA,WACdC,EAAYJ,EAAZI,SAEDC,EAAYC,KAAKC,KAAKJ,EAhBP,GAkBrB,OACE,2BAASK,UAAU,sBAChBC,YAASR,GAEV,2BAASO,UAAU,wBACjB,gBAAC,IAAD,CAAgBE,KAAMA,OAAMN,SAAUA,EAAUC,UAAWA","file":"component---src-pages-blog-tsx-3c8a9cb79fe0c2e1a732.js","sourcesContent":["import * as React from 'react';\r\nimport {graphql, Link} from 'gatsby';\r\n\r\nimport {MarkdownRemarkConnection} from '@/graphql-types';\r\n\r\nimport PostList from '@/components/PostList';\r\nimport BlogPagination from '@/components/Pagination';\r\nimport {withLayout, LayoutProps} from '@/layout';\r\n\r\nconst POSTS_PER_PAGE = 5;\r\n\r\ninterface BlogProps extends LayoutProps {\r\n  data: {\r\n    posts: MarkdownRemarkConnection;\r\n  };\r\n\r\n  pageContext: {\r\n    tag?: string;\r\n  };\r\n}\r\n\r\nconst BlogPage = ({data, location}: BlogProps) => {\r\n  const {edges: posts, totalCount} = data.posts;\r\n  const {pathname} = location;\r\n\r\n  const pageCount = Math.ceil(totalCount / POSTS_PER_PAGE);\r\n\r\n  return (\r\n    <section className=\"post-contents-list\">\r\n      {PostList(posts)}\r\n\r\n      <section className=\"post-pagination-area\">\r\n        <BlogPagination Link={Link} pathname={pathname} pageCount={pageCount}/>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withLayout(BlogPage);\r\n\r\nexport const pageQuery = graphql`\r\n    query Blog {\r\n        # Get tags\r\n        tags: allMarkdownRemark(filter: { frontmatter: { draft: { ne: true } } }) {\r\n            group(field: frontmatter___tags) {\r\n                fieldValue\r\n                totalCount\r\n            }\r\n        }\r\n        # Get posts\r\n        posts: allMarkdownRemark(\r\n            sort: { order: DESC, fields: [frontmatter___createdDate] }\r\n            filter: {\r\n                frontmatter: { draft: { ne: true } }\r\n                fileAbsolutePath: { regex: \"/blog/\" }\r\n            }\r\n            limit: 5\r\n        ) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    excerpt(pruneLength: 100, truncate: true)\r\n                    timeToRead\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        title\r\n                        tags\r\n                        updatedDate(formatString: \"YYYY-MM-DD\")\r\n                        createdDate(formatString: \"YYYY-MM-DD\")\r\n                        author {\r\n                            id\r\n                            bio\r\n                            github\r\n                            avatar {\r\n                                childImageSharp {\r\n                                    fixed(width: 35, height: 35) {\r\n                                        src\r\n                                        srcSet\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}