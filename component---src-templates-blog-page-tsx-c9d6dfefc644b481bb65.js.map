{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/templates/blog-page.tsx"],"names":["PostPage","data","location","posts","edges","totalCount","pathname","pageCount","Math","ceil","isTagPage","split","className","to","toUpperCase","PostList","Link","withLayout","Blog"],"mappings":"6FAAA,gHAqBaA,EAAW,SAAC,GAAgC,IAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAyB,EACpBD,EAAKE,MAA1BA,EADyC,EAChDC,MAAcC,EADkC,EAClCA,WACdC,EAAYJ,EAAZI,SAEDC,EAAYC,KAAKC,KAAKJ,EAhBP,GAiBfK,EAAuC,SAA3BJ,EAASK,MAAM,KAAK,GAEtC,OACE,2BAASC,UAAU,sBAEfF,GACA,gBAAC,OAAD,CAAMG,GAAI,KACR,qBAAGD,UAAU,mBACVN,EAASK,MAAM,KAAK,GAAGG,gBAI7BC,YAASZ,GAEV,2BAASS,UAAU,wBACjB,gBAAC,IAAD,CACEI,KAAMA,OACNV,SAAUA,EACVC,UAAWA,OAONU,sBAAWjB,I,kCClD1B,uBAEekB,YAAf","file":"component---src-templates-blog-page-tsx-c9d6dfefc644b481bb65.js","sourcesContent":["import * as React from 'react';\r\nimport {Link, graphql} from 'gatsby';\r\n\r\nimport {MarkdownRemarkConnection} from '@/graphql-types';\r\n\r\nimport PostList from '@/components/PostList';\r\nimport BlogPagination from '@/components/Pagination';\r\nimport {withLayout, LayoutProps} from '@/layout';\r\n\r\nconst POSTS_PER_PAGE = 5;\r\n\r\ninterface BlogProps extends LayoutProps {\r\n  data: {\r\n    tags: MarkdownRemarkConnection;\r\n    posts: MarkdownRemarkConnection;\r\n  };\r\n  pageContext: {\r\n    tag?: string;\r\n  };\r\n}\r\n\r\nexport const PostPage = ({data, location}: BlogProps) => {\r\n  const {edges: posts, totalCount} = data.posts;\r\n  const {pathname} = location;\r\n\r\n  const pageCount = Math.ceil(totalCount / POSTS_PER_PAGE);\r\n  const isTagPage = pathname.split('/')[2] === 'tags'\r\n\r\n  return (\r\n    <section className=\"post-contents-list\">\r\n      {\r\n        isTagPage &&\r\n        <Link to={'/'}>\r\n          <p className=\"tags-page-title\">\r\n            {pathname.split('/')[3].toUpperCase()}\r\n          </p>\r\n        </Link>\r\n      }\r\n      {PostList(posts)}\r\n\r\n      <section className=\"post-pagination-area\">\r\n        <BlogPagination\r\n          Link={Link}\r\n          pathname={pathname}\r\n          pageCount={pageCount}\r\n        />\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withLayout(PostPage);\r\n\r\nexport const pageQuery = graphql`\r\n    query PageBlog {\r\n        # Get tags\r\n        tags: allMarkdownRemark(filter: { frontmatter: { draft: { ne: true } } }) {\r\n            group(field: frontmatter___tags) {\r\n                fieldValue\r\n                totalCount\r\n            }\r\n        }\r\n        # Get posts\r\n        posts: allMarkdownRemark(\r\n            sort: { order: DESC, fields: [frontmatter___createdDate] }\r\n            filter: {\r\n                frontmatter: { draft: { ne: true } }\r\n                fileAbsolutePath: { regex: \"/blog/\" }\r\n            }\r\n            limit: 5\r\n        ) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    excerpt(pruneLength: 100, truncate: true)\r\n                    timeToRead\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        title\r\n                        tags\r\n                        updatedDate(formatString: \"YYYY-MM-DD\")\r\n                        createdDate(formatString: \"YYYY-MM-DD\")\r\n                        author {\r\n                            id\r\n                            bio\r\n                            github\r\n                            avatar {\r\n                                childImageSharp {\r\n                                    fixed(width: 35, height: 35) {\r\n                                        src\r\n                                        srcSet\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { graphql } from 'gatsby';\r\nimport Blog from '@/pages';\r\n\r\nexport default Blog;\r\n\r\nexport const pageQuery = graphql`\r\n  query TemplateBlogPage($skip: Int) {\r\n    # Get tags\r\n    tags: allMarkdownRemark(filter: { frontmatter: { draft: { ne: true } } }) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n\r\n    # Get posts\r\n    posts: allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___createdDate] }\r\n      filter: {\r\n        frontmatter: { draft: { ne: true } }\r\n        fileAbsolutePath: { regex: \"/blog/\" }\r\n      }\r\n      limit: 5\r\n      skip: $skip\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 100, truncate: true)\r\n          timeToRead\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            updatedDate(formatString: \"YYYY-MM-DD\")\r\n            createdDate(formatString: \"YYYY-MM-DD\")\r\n            tags\r\n            author {\r\n              id\r\n              github\r\n              avatar {\r\n                childImageSharp {\r\n                  fixed(width: 35, height: 35) {\r\n                    src\r\n                    srcSet\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}