{"version":3,"sources":["webpack:///./src/components/AuthorCard/index.tsx","webpack:///./src/components/Tag/index.tsx","webpack:///./src/components/TagList/index.tsx","webpack:///./src/components/Header/index.tsx","webpack:///./src/layout/index.tsx","webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./src/components/NextCard/index.tsx","webpack:///./src/components/Utterences/index.tsx","webpack:///./src/components/Post/index.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["mode","githubAddress","avatar","id","createdDate","className","href","target","src","childImageSharp","fixed","srcSet","alt","tagName","tagLink","toLowerCase","replace","RegExp","to","tags","map","Tag","Header","withLayout","WrappedComponent","render","this","props","children","React","DefaultContext","color","undefined","size","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","data","IconBase","Tree2Element","tree","node","tag","key","child","elem","conf","computedSize","title","svgProps","stroke","fill","strokeWidth","height","width","xmlns","Consumer","postLink","AuthorCard","repo","theme","rootElm","useRef","useEffect","utterances","document","createElement","utterancesConfig","async","crossorigin","keys","forEach","configKey","setAttribute","current","appendChild","ref","github","post","frontmatter","html","cardData","author","slug","fields","excerpt","GITHUB_URL","nextCardList","recents","edges","dangerouslySetInnerHTML","__html","TagList","NextCard","Post"],"mappings":"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","file":"component---src-templates-blog-post-tsx-39310a87465793b8ee42.js","sourcesContent":["import * as React from 'react';\r\nimport { AiFillCalendar, AiFillIdcard } from 'react-icons/ai';\r\n\r\nimport './style.scss';\r\n\r\nexport interface AuthorCardProps {\r\n  mode?: String;\r\n  githubAddress: string;\r\n  avatar: any;\r\n  id: String;\r\n  createdDate: String;\r\n}\r\n\r\nexport default ({\r\n  mode = 'vertical',\r\n  githubAddress,\r\n  avatar,\r\n  id,\r\n  createdDate,\r\n}: AuthorCardProps) => {\r\n  return (\r\n    <section className={`IMD-author-card ${mode}`}>\r\n      <a\r\n        className=\"IMD-author-card__author-area\"\r\n        href={githubAddress}\r\n        target=\"_blank\"\r\n      >\r\n        <img\r\n          className={`IMD-author-card__author-image ${mode}`}\r\n          src={avatar.childImageSharp.fixed.src}\r\n          srcSet={avatar.childImageSharp.fixed.srcSet}\r\n          alt=\"IMD Author Avatar\"\r\n        />\r\n      </a>\r\n\r\n      <section className={`IMD-author-card__contents-area ${mode}`}>\r\n        <div>\r\n          <AiFillIdcard className={'IMD-author-card__icon'} />\r\n          <span className=\"IMD-author-card__github-id\">{id}</span>\r\n        </div>\r\n\r\n        <div>\r\n          <AiFillCalendar className={'IMD-author-card__icon'} />\r\n          <span className=\"IMD-author-card__created-date\">{createdDate}</span>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport {Link} from '@reach/router';\r\n\r\nimport './style.scss';\r\n\r\ninterface Tag {\r\n  tagName: string;\r\n}\r\n\r\nexport default ({tagName = ''}: Tag) => {\r\n  const tagLink = tagName.toLowerCase().replace(new RegExp(' ', 'g'), '-')\r\n  return (\r\n    <Link to={`/blog/tags/${tagLink}/`}>\r\n      <div className=\"IMD-tag\">\r\n        <span className=\"IMD-tag__name\">{`${tagName}`}</span>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { AiFillTag } from 'react-icons/ai';\r\n\r\nimport Tag from '@/components/Tag';\r\n\r\nimport './style.scss';\r\n\r\ninterface TagListProps {\r\n  tags: Array<string>;\r\n}\r\n\r\nexport default ({ tags }: TagListProps) => {\r\n  return (\r\n    <div className=\"IMD-tag-list\">\r\n      <AiFillTag className={'IMD-tag-list__tag-icon'} />\r\n      {tags.map((tagName) => (\r\n        <Tag tagName={tagName} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import {Link} from 'gatsby';\r\n\r\nimport * as React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst LOGO_URL = 'https://avatars1.githubusercontent.com/u/45911353?s=200&v=4';\r\n\r\nexport const Header = () => (\r\n  <header className={'IMD-header'}>\r\n    <section className={'IMD-header__contents'}>\r\n      <Link to={'/'}>\r\n        <section className={'IMD-header__left-contents'}>\r\n          <img\r\n            className={'IMD-header__logo-image'}\r\n            src={LOGO_URL}\r\n            alt=\"IMD Logo\"\r\n          />\r\n          <span className={'IMD-header__text'}>{'기술 블로그'}</span>\r\n        </section>\r\n      </Link>\r\n      <section className={'IMD-header__right-contents'}>\r\n        <Link to={'https://www.facebook.com/ImDev-361775957711957'}>\r\n          <span className={'IMD-header__menu-text'}>{'FaceBook'}</span>\r\n        </Link>\r\n        <Link to={'https://github.com/im-d-team/Dev-Docs'}>\r\n          <span className={'IMD-header__menu-text'}>{'GitHub'}</span>\r\n        </Link>\r\n      </section>\r\n    </section>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import * as React from 'react';\r\n\r\nimport Header from '@/components/Header';\r\n\r\nimport '@/styles/index.scss';\r\n\r\nexport interface LayoutProps {\r\n  location: {\r\n    pathname: string;\r\n  };\r\n  children: any;\r\n}\r\n\r\nexport const withLayout = <P extends object>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n) =>\r\n  class WithLayout extends React.Component<P & LayoutProps> {\r\n    render() {\r\n      return (\r\n        <>\r\n          <Header/>\r\n          <main>\r\n            {this.props.children}\r\n          </main>\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n","export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport AuthorCard, { AuthorCardProps } from '@/components/AuthorCard';\r\n\r\nimport './style.scss';\r\n\r\ninterface NextCardProps extends AuthorCardProps {\r\n  title: string;\r\n  postLink: string;\r\n}\r\n\r\nexport default ({\r\n  title,\r\n  githubAddress,\r\n  avatar,\r\n  id,\r\n  createdDate,\r\n  postLink,\r\n}: NextCardProps) => {\r\n  return (\r\n    <section className=\"IMD-next-card\">\r\n      <Link to={postLink}>\r\n        <h1 className=\"IMD-next-card__title\">{title}</h1>\r\n      </Link>\r\n      <AuthorCard\r\n        mode={'horizontal'}\r\n        githubAddress={githubAddress}\r\n        avatar={avatar}\r\n        id={id}\r\n        createdDate={createdDate}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n","import * as React from \"react\";\nimport { useEffect, useRef } from 'react'\n\nimport './index.scss'\n\nconst src = 'https://utteranc.es/client.js'\n\ninterface UtterencesProps {\n  repo: string;\n  theme: string;\n}\n\nexport default ({ repo, theme }: UtterencesProps) => {\n  const rootElm = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    const utterances = document.createElement('script')\n    const utterancesConfig = {\n      src,\n      repo,\n      theme,\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    }\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      // @ts-ignore\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return (<div className=\"utterences\" ref={rootElm} />)\n}\n\n","import * as React from 'react';\r\nimport {LayoutProps} from '@/layout';\r\nimport {\r\n  MarkdownRemark,\r\n  MarkdownRemarkConnection,\r\n  Site,\r\n} from '@/graphql-types';\r\n\r\nimport AuthorCard from '@/components/AuthorCard';\r\nimport NextCard from '@/components/NextCard';\r\nimport TagList from '@/components/TagList';\r\nimport Utterences from '@/components/Utterences';\r\nimport {CardProps} from '@/components/Card';\r\n\r\nconst GITHUB_URL = 'https://github.com';\r\n\r\nimport './style.scss';\r\n\r\nexport interface BlogPostProps extends LayoutProps {\r\n  data: {\r\n    post: MarkdownRemark;\r\n    recents: MarkdownRemarkConnection;\r\n    site: Site;\r\n  };\r\n}\r\n\r\nconst createCardProps = ({\r\n                           frontmatter: {\r\n                             title,\r\n                             createdDate,\r\n                             tags,\r\n                             author: {avatar, github, id},\r\n                           },\r\n                           fields: {slug},\r\n                           excerpt,\r\n                         }: MarkdownRemark): CardProps => ({\r\n  title,\r\n  slug,\r\n  excerpt,\r\n  githubAddress: `${GITHUB_URL}/${github}`,\r\n  avatar,\r\n  id,\r\n  createdDate,\r\n  tags,\r\n});\r\n\r\nexport default (props: BlogPostProps) => {\r\n  const {frontmatter, html} = props.data.post;\r\n  const cardData = createCardProps(props.data.post);\r\n  // const cover = get(frontmatter, 'image.children.0.fixed', {});\r\n  const nextCardList = props.data.recents.edges;\r\n\r\n  return (\r\n    <>\r\n      <section className={'blog-post'}>\r\n        <section className={'blog-post__header'}>\r\n          <AuthorCard\r\n            githubAddress={cardData.githubAddress}\r\n            avatar={cardData.avatar}\r\n            id={cardData.id}\r\n            createdDate={cardData.createdDate}\r\n          />\r\n          <h1 className={'blog-post__title'}>{frontmatter.title}</h1>\r\n        </section>\r\n\r\n        {/*<img {...cover} />*/}\r\n\r\n        <article\r\n          className={'blog-post__main'}\r\n          dangerouslySetInnerHTML={{__html: html}}\r\n        />\r\n        <TagList tags={frontmatter.tags}/>\r\n\r\n        <section className={'blog-post__next-list'}>\r\n          {nextCardList.map(\r\n            ({\r\n               node: {\r\n                 fields: {slug},\r\n                 frontmatter: {\r\n                   title,\r\n                   createdDate,\r\n                   author: {\r\n                     id,\r\n                     github,\r\n                     avatar\r\n                   },\r\n                 },\r\n               },\r\n             }) => {\r\n              return (\r\n                <NextCard\r\n                  title={title}\r\n                  githubAddress={`${GITHUB_URL}/${github}`}\r\n                  avatar={avatar}\r\n                  id={id}\r\n                  createdDate={createdDate}\r\n                  postLink={slug}\r\n                />\r\n              );\r\n            },\r\n          )}\r\n        </section>\r\n      </section>\r\n      <Utterences repo={'im-d-team/im-d.dev'} theme={'github-light'}/>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { withLayout } from '@/layout';\r\nimport Post, { BlogPostProps } from '@/components/Post';\r\n\r\nconst BlogPostPage = (props: BlogPostProps) => {\r\n  return <Post {...props} />;\r\n};\r\n\r\nexport default withLayout(BlogPostPage);\r\n\r\nexport const pageQuery = graphql`\r\n  query TemplateBlogPost($slug: String!) {\r\n    site: site {\r\n      siteMetadata {\r\n        disqus\r\n      }\r\n    }\r\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      excerpt\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        tags\r\n        author {\r\n          id\r\n          bio\r\n          github\r\n          avatar {\r\n            childImageSharp {\r\n              fixed(width: 80, height: 80, quality: 100) {\r\n                src\r\n                srcSet\r\n              }\r\n            }\r\n          }\r\n        }\r\n        title\r\n        createdDate(formatString: \"YYYY-MM-DD\")\r\n        updatedDate(formatString: \"YYYY-MM-DD\")\r\n      }\r\n    }\r\n\r\n    recents: allMarkdownRemark(\r\n      filter: {\r\n        fields: { slug: { ne: $slug } }\r\n        frontmatter: { draft: { ne: true } }\r\n        fileAbsolutePath: { regex: \"/blog/\" }\r\n      }\r\n      sort: { order: DESC, fields: [frontmatter___updatedDate] }\r\n      limit: 3\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            createdDate(formatString: \"YYYY-MM-DD\")\r\n            updatedDate(formatString: \"YYYY-MM-DD\")\r\n            author {\r\n              id\r\n              github\r\n              avatar {\r\n                childImageSharp {\r\n                  fixed(width: 36, height: 36) {\r\n                    src\r\n                    srcSet\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}